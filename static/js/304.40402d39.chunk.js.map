{"version":3,"file":"static/js/304.40402d39.chunk.js","mappings":"iRAWe,SAASA,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAClBC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAQL,EAAMM,WAAU,SAAAC,GAAO,OAAIA,EAAQJ,KAAOA,CAAnB,IAC/BK,GAAeC,EAAAA,EAAAA,QAAO,MACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAiBXC,EAAY,SAAAC,GAChB,IAAIC,EAAShB,EAAMiB,MAAK,SAAAC,GACtB,OAAIA,EAAYC,OAASJ,IACvBK,EAAAA,GAAAA,KAAW,8BAA+B,CACxCC,SAAUD,EAAAA,GAAAA,SAAAA,cAEL,EAGV,IACIJ,IAEHN,GAASY,EAAAA,EAAAA,IAAYtB,EAAMK,KAC3BO,EAAS,aAAc,CAAEW,SAAS,KAEpCP,GAAS,CACV,EAMD,OACE,UAAC,KAAD,YACE,SAAC,IAAD,CACEQ,MAAM,eACNC,YAAY,eACZC,aA1Ce,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTX,EAAOU,EAAKE,SAASZ,KAAKa,MAC1BC,EAAQJ,EAAKE,SAASG,OAAOF,MAC7BG,EAAQN,EAAKE,SAASI,MAAMH,MAMlClB,EAAUK,EALM,CACdA,KAAMA,EACNc,MAAOA,EACPE,MAAOA,IAGTN,EAAKO,OACN,EA8BKC,WAVa,WACjB7B,EAAa8B,QAAQC,OACtB,EASK/B,aAAcA,KAEhB,SAAC,KAAD,MAGL,C","sources":["pages/editContact/editContact.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getContacts } from 'Redux/Selectors';\nimport { editContact } from 'Redux/Operations';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'pages/home/home.styled';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactAddEdit from 'components/contactAddEdit/contactAddEdit';\n\nexport default function EditContact() {\n  const items = useSelector(getContacts);\n  const { id } = useParams();\n  const index = items.findIndex(contact => contact.id === id);\n  const avatarPicker = useRef(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const phone = form.elements.number.value;\n    const email = form.elements.email.value;\n    const contact = {\n      name: name,\n      phone: phone,\n      email: email,\n    };\n    twinCheck(name, contact);\n    form.reset();\n  };\n\n  const twinCheck = newContactName => {\n    let isTwin = items.find(prevContact => {\n      if (prevContact.name === newContactName) {\n        toast.warn('This contact already exists', {\n          position: toast.POSITION.TOP_CENTER,\n        });\n        return true;\n      }\n      return false;\n    });\n    if (!isTwin) {\n      // console.log(items[index]);\n      dispatch(editContact(items[index]));\n      navigate('/phonebook', { replace: true });\n    }\n    isTwin = false;\n  };\n\n  const handlePick = () => {\n    avatarPicker.current.click();\n  };\n\n  return (\n    <Container>\n      <ContactAddEdit\n        title=\"Edit contact\"\n        titleButton=\"Edit contact\"\n        handleSubmit={handleSubmit}\n        handlePick={handlePick}\n        avatarPicker={avatarPicker}\n      />\n      <ToastContainer />\n    </Container>\n  );\n}\n"],"names":["EditContact","items","useSelector","getContacts","id","useParams","index","findIndex","contact","avatarPicker","useRef","dispatch","useDispatch","navigate","useNavigate","twinCheck","newContactName","isTwin","find","prevContact","name","toast","position","editContact","replace","title","titleButton","handleSubmit","e","preventDefault","form","target","elements","value","phone","number","email","reset","handlePick","current","click"],"sourceRoot":""}